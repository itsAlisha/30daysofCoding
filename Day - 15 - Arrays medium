//Q1
vector<int> nextGreaterPermutation(vector<int> &A) {
    // Write your code here.
    //12|34 1243 1324 1342 1423 1432....
   int index=-1;
   int n=A.size();
   for(int i=n-2;i>=0;i--){
       if(A[i]<A[i+1]){
           index=i;
           break;
       }
   }
   if(index==-1){
        reverse(A.begin(),A.end());
        return A;
    }
    for(int i=n-1;i>index;i--){
        if(A[i]>A[index]){
            swap(A[index],A[i]);
            break;
        }
    }
    reverse(A.begin()+index+1,A.end());
    return A;
}

//Q2.
int longestSuccessiveElements(vector<int>&nums) {
    // Write your code here.
  //  unique(nums.begin(),nums.end());
        int n=nums.size();
        int maxcount=1;
        if(n==0){
            return 0;
        }
        sort(nums.begin(),nums.end());
       // int diff=1;
       int count=1;
        for(int i=1;i<n;i++){
           if(nums[i]-nums[i-1]==0){
               continue;
            }
            if(nums[i]-nums[i-1]==1){
                count++;
              //  continue;
            }
            else{
              count=1;
            }
            maxcount=max(maxcount,count);
        }
        return maxcount;
    
}
